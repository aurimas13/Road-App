"""users table

Revision ID: b9cd2869322e
Revises: 
Create Date: 2022-10-28 20:40:48.092248

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b9cd2869322e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('batch_update',
    sa.Column('batchId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('batchUpdateDate', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('batchId')
    )
    op.create_table('traffic',
    sa.Column('traffic_auto_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('traffic_name', sa.String(length=140), nullable=True),
    sa.Column('road_number', sa.String(length=64), nullable=True),
    sa.Column('road_name', sa.String(length=140), nullable=True),
    sa.Column('km', sa.REAL(), nullable=True),
    sa.Column('x', sa.REAL(), nullable=True),
    sa.Column('y', sa.REAL(), nullable=True),
    sa.Column('timeInterval', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('direction', sa.String(length=64), nullable=True),
    sa.Column('startX', sa.REAL(), nullable=True),
    sa.Column('startY', sa.REAL(), nullable=True),
    sa.Column('endX', sa.REAL(), nullable=True),
    sa.Column('endY', sa.REAL(), nullable=True),
    sa.Column('winterSpeed', sa.Integer(), nullable=True),
    sa.Column('summerSpeed', sa.Integer(), nullable=True),
    sa.Column('numberOfVehicles', sa.Integer(), nullable=True),
    sa.Column('averageSpeed', sa.REAL(), nullable=True),
    sa.Column('trafficType', sa.String(length=140), nullable=True),
    sa.PrimaryKeyConstraint('traffic_auto_id')
    )
    op.create_table('weather',
    sa.Column('weather_auto_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('surinkimo_data_unix', sa.Integer(), nullable=True),
    sa.Column('matomumas', sa.Integer(), nullable=True),
    sa.Column('kilometras', sa.REAL(), nullable=True),
    sa.Column('oro_temperatura', sa.REAL(), nullable=True),
    sa.Column('vejo_greitis_vidut', sa.REAL(), nullable=True),
    sa.Column('krituliu_kiekis', sa.REAL(), nullable=True),
    sa.Column('dangos_temperatura', sa.REAL(), nullable=True),
    sa.Column('rasos_taskas', sa.REAL(), nullable=True),
    sa.Column('vejo_greitis_maks', sa.REAL(), nullable=True),
    sa.Column('sukibimo_koeficientas', sa.REAL(), nullable=True),
    sa.Column('ilguma', sa.REAL(), nullable=True),
    sa.Column('platuma', sa.REAL(), nullable=True),
    sa.Column('lat', sa.REAL(), nullable=True),
    sa.Column('lng', sa.REAL(), nullable=True),
    sa.Column('konstrukcijos_temp_007', sa.REAL(), nullable=True),
    sa.Column('konstrukcijos_temp_020', sa.REAL(), nullable=True),
    sa.Column('konstrukcijos_temp_050', sa.REAL(), nullable=True),
    sa.Column('konstrukcijos_temp_080', sa.REAL(), nullable=True),
    sa.Column('konstrukcijos_temp_110', sa.REAL(), nullable=True),
    sa.Column('konstrukcijos_temp_130', sa.REAL(), nullable=True),
    sa.Column('konstrukcijos_temp_140', sa.REAL(), nullable=True),
    sa.Column('konstrukcijos_temp_170', sa.REAL(), nullable=True),
    sa.Column('konstrukcijos_temp_200', sa.REAL(), nullable=True),
    sa.Column('kelio_danga', sa.String(length=140), nullable=True),
    sa.Column('uzsalimo_taskas', sa.String(length=64), nullable=True),
    sa.Column('vejo_kryptis', sa.String(length=64), nullable=True),
    sa.Column('surinkimo_data', sa.DateTime(), nullable=True),
    sa.Column('irenginys', sa.String(length=140), nullable=True),
    sa.Column('numeris', sa.String(length=140), nullable=True),
    sa.Column('pavadinimas', sa.String(length=140), nullable=True),
    sa.Column('krituliu_tipas', sa.String(length=140), nullable=True),
    sa.Column('pavadinimas_perspejimas', sa.String(length=140), nullable=True),
    sa.Column('kodas', sa.String(length=140), nullable=True),
    sa.PrimaryKeyConstraint('weather_auto_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('weather')
    op.drop_table('traffic')
    op.drop_table('batch_update')
    # ### end Alembic commands ###
